// This is a generated file by witgen (https://github.com/bnjjj/witgen), please do not edit yourself, you can generate a new one thanks to cargo witgen generate command. (witme v0.1.0) 

type string-alias = string

test-simple: function(array: list<u8>) -> string

use-string-alias: function(s: string-alias) -> string-alias

test-tuple: function(other: list<u8>, test-struct: test-struct, other-enum: test-enum) -> (string, s64)

///  Documentation over enum
variant test-enum {
    ///  Doc comment over Unit variant in enum
    unit,
    number(u64),
    ///  Doc comment over String variant 
    string-variant(string),
}


test-result: function(other: list<u8>, number: u8, othernum: s32) -> expected<tuple<string, u64>, string>

///  Example of using generating an enum, e.i. a variant with unit fields
enum color {
    red,
    green,
    blue,
}


record init-args {
    owner-id: string,
    metadata: nft-contract-metadata
}

///  Documentation over struct
///  in multi-line
type test-tuple = tuple<u64, string>

variant my-enum {
    unit,
    tuple-variant(tuple<string, s32>),
}


record test-struct {
    ///  Doc comment over inner field in struct
    inner: string
}

test-option: function(other: list<u8>, number: u8, othernum: s32) -> option<tuple<string, u64>>

has-mutable: function(s: string) -> string

record has-hash-map {
    map: list<tuple<string,test-struct>>
}

type nft-contract-metadata = string

test-array: function(other: list<u8>, number: u8, othernum: s32) -> (string, u64)

///  Here is a doc example to generate in wit file
record test-bis {
    coucou: string,
    btes: list<u8>
}

test-vec: function(other: list<u8>, number: u8, othernum: s32) -> (string, u64)

///  Documentation over enum
variant complicated-enum {
    ///  Doc comment over Unit variant in enum
    hash-fields(complicated-enum-hash-fields),
    number(complicated-enum-number),
    ///  Doc comment over String variant in enum
    string-variant(complicated-enum-string-variant),
}

///  Doc comment over Unit variant in enum
record complicated-enum-hash-fields {
    name: string,
    kind: test-enum
}
record complicated-enum-number {
    size: u32
}
///  Doc comment over String variant in enum
record complicated-enum-string-variant {
    ///  Can document fields
    variant: string
}

