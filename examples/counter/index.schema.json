{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "definitions": {
    "Balance": {
      "$ref": "#/definitions/U128",
      "description": "Balance is a type for storing amounts of tokens, specified in yoctoNEAR."
    },
    "Decrement": {
      "additionalProperties": false,
      "contractMethod": "change",
      "description": "Decrement (subtract from) the counter.\n\n```bash near call counter.YOU.testnet decrement --accountId donation.YOU.testnet ```",
      "properties": {
        "args": {
          "additionalProperties": false,
          "type": "object"
        },
        "options": {
          "additionalProperties": false,
          "properties": {
            "attachedDeposit": {
              "$ref": "#/definitions/Balance",
              "default": "0",
              "description": "Units in yoctoNear"
            },
            "gas": {
              "default": "30000000000000",
              "description": "Units in gas",
              "pattern": "[0-9]+",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "args",
        "options"
      ],
      "type": "object"
    },
    "Decrement__Result": {
      "type": "null"
    },
    "GetNum": {
      "additionalProperties": false,
      "contractMethod": "view",
      "description": "Returns 8-bit signed integer of the counter value.\n\nThis must match the type from our struct's 'val' defined above.\n\nNote, the parameter is `&self` (without being mutable) meaning it doesn't modify state. In the frontend (/src/main.js) this is added to the \"viewMethods\" array using near-cli we can call this by:\n\n```bash near view counter.YOU.testnet get_num ```",
      "properties": {
        "args": {
          "additionalProperties": false,
          "type": "object"
        }
      },
      "required": [
        "args"
      ],
      "type": "object"
    },
    "GetNum__Result": {
      "$ref": "#/definitions/i8"
    },
    "Increment": {
      "additionalProperties": false,
      "contractMethod": "change",
      "description": "Increment the counter.\n\nNote, the parameter is \"&mut self\" as this function modifies state. In the frontend (/src/main.js) this is added to the \"changeMethods\" array using near-cli we can call this by:\n\n```bash near call counter.YOU.testnet increment --accountId donation.YOU.testnet ```",
      "properties": {
        "args": {
          "additionalProperties": false,
          "type": "object"
        },
        "options": {
          "additionalProperties": false,
          "properties": {
            "attachedDeposit": {
              "$ref": "#/definitions/Balance",
              "default": "0",
              "description": "Units in yoctoNear"
            },
            "gas": {
              "default": "30000000000000",
              "description": "Units in gas",
              "pattern": "[0-9]+",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "args",
        "options"
      ],
      "type": "object"
    },
    "Increment__Result": {
      "type": "null"
    },
    "Reset": {
      "additionalProperties": false,
      "contractMethod": "change",
      "description": "Reset to zero.",
      "properties": {
        "args": {
          "additionalProperties": false,
          "type": "object"
        },
        "options": {
          "additionalProperties": false,
          "properties": {
            "attachedDeposit": {
              "$ref": "#/definitions/Balance",
              "default": "0",
              "description": "Units in yoctoNear"
            },
            "gas": {
              "default": "30000000000000",
              "description": "Units in gas",
              "pattern": "[0-9]+",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "required": [
        "args",
        "options"
      ],
      "type": "object"
    },
    "Reset__Result": {
      "type": "null"
    },
    "U128": {
      "description": "String representation of a u128-bit integer",
      "pattern": "^[0-9]+$",
      "type": "string"
    },
    "i8": {
      "maximum": 127,
      "minimum": -128,
      "type": "integer"
    }
  }
}