// This is a generated file by witgen (https://github.com/bnjjj/witgen), please do not edit yourself, you can generate a new one thanks to cargo witgen generate command. (witme v0.2.2) 

// This is a generated file by witgen (https://github.com/bnjjj/witgen), please do not edit yourself, you can generate a new one thanks to cargo witgen generate command. (witme v0.2.0) 

///  StorageUsage is used to count the amount of storage used by a contract.
type storage-usage = u64

///  Balance is a type for storing amounts of tokens, specified in yoctoNEAR.
type balance = u128

///  Represents the amount of NEAR tokens in "gas units" which are used to fund transactions.
type gas = u64

///  base64 string.
type base64-vec-u8 = string

///  Raw type for duration in nanoseconds
type duration = u64

///  @minLength 2
///  @maxLength 64
///  @pattern ^(([a-z\d]+[-_])*[a-z\d]+\.)*([a-z\d]+[-_])*[a-z\d]+$
type account-id = string

///  String representation of a u128-bit integer
///  @pattern ^[0-9]+$
type u128 = string

///  Public key in a binary format with base58 string serialization with human-readable curve.
///  The key types currently supported are `secp256k1` and `ed25519`.
/// 
///  Ed25519 public keys accepted are 32 bytes and secp256k1 keys are the uncompressed 64 format.
type public-key = string

///  Raw type for timestamp in nanoseconds
type timestamp = u64

///  Returns 8-bit signed integer of the counter value.
/// 
///  This must match the type from our struct's 'val' defined above.
/// 
///  Note, the parameter is `&self` (without being mutable) meaning it doesn't modify state.
///  In the frontend (/src/main.js) this is added to the "viewMethods" array
///  using near-cli we can call this by:
/// 
///  ```bash
///  near view counter.YOU.testnet get_num
///  ```
get-num: function() -> s8


///  Reset to zero.
///  change
reset: function()

///  Increment the counter.
/// 
///  Note, the parameter is "&mut self" as this function modifies state.
///  In the frontend (/src/main.js) this is added to the "changeMethods" array
///  using near-cli we can call this by:
/// 
///  ```bash
///  near call counter.YOU.testnet increment --accountId donation.YOU.testnet
///  ```
///  change
increment: function()

///  Decrement (subtract from) the counter.
/// 
///  ```bash
///  near call counter.YOU.testnet decrement --accountId donation.YOU.testnet
///  ```
///  change
decrement: function()

